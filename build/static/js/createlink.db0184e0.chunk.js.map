{"version":3,"sources":["API/api.js","components/Contributors/Contributors.tsx","components/CardLink/CardLink.tsx","components/CardIcon/CardIcon.tsx","components/CardList/CardList.tsx","components/ColorPicker/ColorPicker.tsx","components/ModalContent/ModalContent.tsx","pages/CreateLinkPage/CreateLinkPage.tsx","pages/Redirect/Redirect.tsx"],"names":["getOwner","owner","axios","get","getOwnerRepo","repo","getContributors","getShortURL","longURL","checkTinyURL","tinyHash","starRepo","token","put","headers","checkIsStarredRepo","defaults","baseURL","useStyles","makeStyles","accordion","background","boxShadow","display","margin","accordionSummary","padding","minHeight","height","Contributors","contributors","classes","Accordion","className","AccordionSummary","expandIcon","Typography","AccordionDetails","Grid","container","direction","map","contributor","index","item","memo","theme","card","width","spacing","borderRadius","desc","flexDirection","justifyContent","starButton","modalButton","position","top","right","modalInput","paddingRight","modalContent","left","transform","CardLink","color","icon","enqueueSnackbar","useSnackbar","useState","repoAuthor","setRepoAuthor","repoName","setRepoName","repoDescription","setRepoDescription","starsAmount","setStarsAmount","setContributors","getContributorList","useRef","a","data","login","slice","variant","fetchData","useCallback","name","description","stargazers_count","message","useEffect","current","SelectedIcon","icons","AiFillStar","AiOutlineStar","AiOutlineSend","isOpenModal","setIsOpenModal","isStarredRepo","setIsStarredRepo","toggleOpenModal","prev","tokenPAT","setTokenPAT","handleTokenPATChange","e","target","value","handleClickToStarRepo","status","console","log","Error","Card","style","size","IconButton","onClick","Modal","open","onClose","Box","TextField","onChange","label","fullWidth","selectedIcon","CardIcon","children","iconName","handleOnClick","root","overflowX","marginBottom","CardList","handleOnClickIconCard","iconsNames","useMemo","Object","keys","Paper","wrap","CurrentIcon","colorButton","backdrop","zIndex","bottom","ColorPicker","handleChangeComplete","showColorPicker","setShowColorPicker","colorButtonRef","setLeft","setTop","toggleShowColorPicker","getBoundingClientRect","clientHeight","hideColorPicker","currentTarget","Button","ref","disableAlpha","onChangeComplete","copyInput","cursor","caretColor","textOverflow","mb","ModalContent","link","handleCopyInputTextToClipboard","navigator","clipboard","writeText","then","catch","handlePressKeyToCopyInputTextToClipboard","key","onKeyDown","InputProps","startAdornment","InputAdornment","createLinkButton","textField","backgroundColor","CreateLinkPage","setOwner","isOwnerExists","setIsOwnerExists","handleOwnerChange","useDebounce","debouncedOwner","checkIfOwnerExists","setRepo","isRepoExists","setIsRepoExists","handleRepoChange","debouncedRepo","checkIfRepoExists","setColor","hex","setIcon","linkURL","setLinkURL","handleCreateLink","window","location","origin","queryParams","encodedQueryParams","btoa","longLinkURL","tinyURL","URL","tinyPathname","pathname","shortLinkURL","isCreateLinkButtonDisabled","p","alignItems","xs","disabled","RedirectPage","shorthash","useParams","existsTinyURL","setExistsTinyURL","checkIfExistsTinyURL","errorMessage","includes","assign","to"],"mappings":"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","file":"static/js/createlink.db0184e0.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.github.com';\n\nexport function getOwner (owner) {\n    return axios.get(`users/${owner}`);\n}\n\nexport function getOwnerRepo(owner, repo) {\n    return axios.get(`repos/${owner}/${repo}`);\n}\n\nexport function getContributors(owner, repo) {\n    return axios.get(`repos/${owner}/${repo}/contributors`);\n}\n\nexport function getShortURL(longURL) {\n    return axios.get(`https://tinyurl.com/api-create.php?url=${longURL}`)\n}\n\nexport function checkTinyURL(tinyHash) {\n    return axios.get(`https://tinyurl.com/${tinyHash}`)\n}\n\nexport function starRepo(owner, repo, token) {\n  return axios.put(`user/starred/${owner}/${repo}`, {}, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/vnd.github.v3+json',\n      'Authorization': `token ${token}`\n    }\n  })\n}\n\nexport function checkIsStarredRepo(owner, repo, token) {\n  return axios.get(`user/starred/${owner}/${repo}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/vnd.github.v3+json',\n      'Authorization': `token ${token}`\n    }\n  })\n}\n\n","import React, { FC, memo } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    accordion: {\n    background: 'inherit',\n    boxShadow: 'none',\n    '&:before': {\n      display: 'none',\n    },\n    '&.Mui-expanded': {\n        margin: 0,\n      }\n  },\n  accordionSummary: {\n      display: 'inline-flex',\n      padding: 0,\n      minHeight: 0,\n      height: 20,\n      '&.Mui-expanded': {\n        minHeight: 0,\n      },\n      '& .MuiIconButton-root': {\n        padding: 0,\n      },\n  }\n}));\n\ninterface ContributorsProps {\n    contributors: string[];\n}\n\nconst Contributors: FC<ContributorsProps> = ({ contributors }) => {\n  const classes = useStyles();\n\n  return (\n    <Accordion className={classes.accordion}>\n      <AccordionSummary className={classes.accordionSummary} expandIcon={<ExpandMoreIcon />}>\n        <Typography>Contributors</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container direction=\"column\">\n          {contributors.map((contributor, index) => (\n            <Grid item key={contributor}>\n                <Typography>{`${index + 1} ${contributor}`}</Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default memo(Contributors);\n","import { FC, useState, useEffect, useCallback, useRef, ChangeEvent } from 'react'\nimport { useSnackbar } from 'notistack'\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport * as icons from 'react-icons/ai'\nimport { getOwnerRepo, getContributors, starRepo, checkIsStarredRepo } from '../../API/api'\nimport { IContributor } from '../../interfaces'\nimport Contributors from '../Contributors'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    width: 400,\n    padding: theme.spacing(4),\n    borderRadius: theme.spacing(3),\n  },\n  desc: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    },\n  starButton: {\n    padding: 0,\n    borderRadius: 0,\n  },\n  modalButton: {\n      borderRadius: 4,\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      padding: 16,\n  },\n  modalInput: {\n    '& .MuiInputBase-root': {\n        paddingRight: 42,\n    },\n  },\n  modalContent: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    width: 400,\n  },\n}));\n\ninterface CardLinkProps {\n    color: string;\n    owner: string;\n    repo: string;\n    icon: string;\n}\n\nconst CardLink: FC<CardLinkProps> = ({ color, owner, repo, icon }) => {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [repoAuthor, setRepoAuthor] = useState<string>('')\n    const [repoName, setRepoName] = useState<string>('')\n    const [repoDescription, setRepoDescription] = useState<string>('')\n    const [starsAmount, setStarsAmount] = useState<number>(0)\n\n    // ================getContributors====================\n    const [contributors, setContributors] = useState<string[]>([])\n\n    const getContributorList = useRef(async () => {\n        try {\n            const { data } = await getContributors(owner, repo)\n            const contributors = (data as IContributor[]).map(({ login }) => login).slice(0, 10)\n            setContributors(contributors)\n        } catch (e) {\n            enqueueSnackbar('Can\\'t get contributors', { variant: \"warning\"})\n        }\n    })\n    // ====================================\n\n    const fetchData = useCallback(\n        async () => {\n            try {\n                const {data} = await getOwnerRepo(owner, repo)\n                setRepoAuthor(data.owner.login)\n                setRepoName(data.name)\n                setRepoDescription(data.description)\n                setStarsAmount(data.stargazers_count)\n            } catch (e) {\n                enqueueSnackbar(`Author or repository with these names does not exist. ${(e as Error).message}`, { variant: \"error\"})\n            }\n        },\n        [owner, repo, enqueueSnackbar],\n    )\n\n    useEffect(() => {\n        fetchData()\n        getContributorList.current()\n    }, [fetchData])\n\n    const SelectedIcon = icons[icon as keyof typeof icons]\n    const { AiFillStar, AiOutlineStar, AiOutlineSend } = icons\n\n    // ================Modal======================\n    const [isOpenModal, setIsOpenModal] = useState(false)\n    const [isStarredRepo, setIsStarredRepo] = useState(false)\n    const toggleOpenModal = useRef(() => setIsOpenModal(prev => !prev))\n\n    const [tokenPAT, setTokenPAT] = useState<string>('')\n    const handleTokenPATChange = useRef((e: ChangeEvent<HTMLInputElement>) => setTokenPAT(e.target.value))\n\n    const handleClickToStarRepo = useCallback(async () => {\n        try {\n            const { status } = await checkIsStarredRepo(owner, repo, tokenPAT)\n            if (status === 204) {\n                toggleOpenModal.current()\n                setIsStarredRepo(true)\n                return\n            }\n        } catch (error) {\n            console.log((error as Error).message)\n        }\n\n        try {\n            const { status } = await starRepo(owner, repo, tokenPAT)\n            if (status !== 204) {\n                throw Error('Try again')\n            }\n            toggleOpenModal.current()\n            setStarsAmount(prev => prev + 1)\n            setIsStarredRepo(true)\n        } catch (error) {\n            enqueueSnackbar((error as Error).message, { variant: \"warning\"})\n        }\n    }, [owner, repo, tokenPAT, enqueueSnackbar]);\n    // ======================================\n\n    return (\n        <>\n        <Card className={classes.card} style={{background: color}}>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <SelectedIcon size=\"8em\" />\n                </Grid>\n                <Grid item className={classes.desc}>\n                    <Typography>Author: {repoAuthor}</Typography>\n                    <Typography>Repository: {repoName}</Typography>\n                    <Typography>Description: {repoDescription || 'no description'}</Typography>\n                    <Typography>\n                        Stars: {starsAmount}\n                        <IconButton className={classes.starButton} onClick={toggleOpenModal.current}>\n                            {isStarredRepo ? <AiFillStar /> : <AiOutlineStar />}\n                        </IconButton>\n                    </Typography>\n                    <Contributors contributors={contributors} />\n                </Grid>\n            </Grid>\n            </Card>\n            <Modal\n                open={isOpenModal}\n                onClose={toggleOpenModal.current}\n            >\n                <Card className={classes.modalContent}>\n                    <Box position=\"relative\">\n                        <TextField\n                            value={tokenPAT}\n                            onChange={handleTokenPATChange.current}\n                            variant=\"outlined\"\n                            label=\"Fill your personal auth token\"\n                            fullWidth\n                            className={classes.modalInput}\n                        />\n                        <IconButton className={classes.modalButton} onClick={handleClickToStarRepo}>\n                            <AiOutlineSend />\n                        </IconButton>\n                    </Box>\n                </Card>\n            </Modal>\n            </>\n    )\n}\n\nexport default CardLink","import { useRef, FC, ReactNode, memo } from 'react'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\ninterface CardIconProps {\n    children: ReactNode;\n    onClick: (iconName: string) => void;\n    iconName: string;\n    selectedIcon: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    padding: theme.spacing(1),\n    height: 60,\n    width: 60,\n    '&:hover': {\n        background: '#B6F3ED',\n    }\n    },\n    margin: {\n    margin: theme.spacing(1),\n  },\n  selectedIcon: {\n    background: '#B6F3ED',\n  }\n}));\n\nconst CardIcon: FC<CardIconProps> = ({ children, onClick, iconName, selectedIcon }) => {\n    const classes = useStyles();\n    const handleOnClick = useRef(() => onClick(iconName))\n\n    return (\n        <Grid item className={classes.margin}>\n            <Card\n                className={`${classes.card} ${selectedIcon && classes.selectedIcon}`}\n                onClick={handleOnClick.current}\n            >\n                <Grid container justifyContent=\"center\">\n                    {children}\n                </Grid>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default memo(CardIcon)","import { FC, useMemo, memo } from 'react'\nimport * as icons from 'react-icons/ai'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport CardIcon from '../CardIcon'\n\ninterface CardListProps {\n    selectedIcon: string;\n    handleOnClickIconCard: (iconName: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nconst CardList: FC<CardListProps> = ({ selectedIcon, handleOnClickIconCard }) => {\n    const classes = useStyles();\n    const iconsNames = useMemo(() => {\n        const iconsArray = Object.keys(icons) as Array<keyof typeof icons>\n        return iconsArray.slice(0, 50)\n    }, [])\n    return (\n        <>\n            <Typography>Choose icon</Typography>\n            <Paper className={classes.root}>\n                <Grid container wrap=\"nowrap\">\n                    {iconsNames.map(iconName => {\n                        const CurrentIcon = icons[iconName]\n                        return (\n                            <CardIcon\n                                key={iconName}\n                                selectedIcon={selectedIcon === iconName}\n                                iconName={iconName}\n                                onClick={handleOnClickIconCard}>\n                                    <CurrentIcon size=\"4em\" />\n                            </CardIcon>\n                        )\n                    })}\n                </Grid>\n            </Paper>\n        </>\n    )\n}\n\nexport default memo(CardList)","import { FC, useRef, useState, useCallback, MouseEvent } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  marginBottom: {\n    marginBottom: theme.spacing(2),\n  },\n  colorButton: {\n    height: 50,\n  },\n  backdrop: {\n      zIndex: 2,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n}));\n\ninterface ColorPickerProps {\n    color: string,\n    handleChangeComplete: (color: any) => void,\n}\n\nconst ColorPicker: FC<ColorPickerProps> = ({ color, handleChangeComplete}) => {\n    const classes = useStyles();\n\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false)\n    const colorButtonRef = useRef<HTMLButtonElement>(null)\n    const [left, setLeft] = useState<number>(0)\n    const [top, setTop] = useState<number>(0)\n\n    const toggleShowColorPicker = useCallback(() => {\n        if (colorButtonRef?.current) {\n            const { left, top } = colorButtonRef.current.getBoundingClientRect();\n            setTop(top + colorButtonRef.current.clientHeight)\n            setLeft(left)\n        }\n        setShowColorPicker((prev) => !prev)\n    }, [colorButtonRef])\n\n    const hideColorPicker = useRef((e: MouseEvent) => {\n        if (e.target === e.currentTarget) {\n            setShowColorPicker((prev) => !prev)\n        }\n    })\n\n    return (\n        <Grid item className={classes.marginBottom}>\n            <Button\n                ref={colorButtonRef}\n                onClick={toggleShowColorPicker}\n                variant=\"contained\"\n                style={{ background: color }}\n                className={classes.colorButton}\n                fullWidth\n            >\n                Pick Color\n            </Button>\n            {showColorPicker && (\n                <Box className={classes.backdrop} onClick={hideColorPicker.current}>\n                    <Box style={{left, top, position: \"absolute\"}}>\n                        <ChromePicker\n                            disableAlpha\n                            color={color}\n                            onChangeComplete={handleChangeComplete}\n                        />\n                    </Box>\n                </Box>\n            )}\n        </Grid>\n    )\n}\n\nexport default ColorPicker","import { FC, useRef, KeyboardEvent } from 'react'\nimport { useSnackbar } from 'notistack'\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport CardLink from '../CardLink'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(4),\n    borderRadius: theme.spacing(3),\n  },\n  copyInput: {\n    '& input': {\n      cursor: 'pointer',\n      caretColor: 'transparent',\n      textOverflow: 'ellipsis',\n    },\n    marginBottom: theme.spacing(4),\n  },\n  mb: {\n      marginBottom: theme.spacing(1),\n  },\n}));\n\ninterface ModalContentProps {\n    color: string;\n    owner: string;\n    repo: string;\n    icon: string;\n    link: string;\n}\n\nconst ModalContent: FC<ModalContentProps> = ({ color, owner, repo, icon, link }) => {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar()\n\n    // =====copy to clipboard handle & on press key Enter=====\n    const { current: handleCopyInputTextToClipboard } = useRef(() => {\n      navigator.clipboard\n        .writeText(link)\n        .then(() => enqueueSnackbar('Link is copied to clipboard', { variant: \"success\" }))\n        .catch(() => enqueueSnackbar('Link is not copied to clipboard. Try again, please.', { variant: \"error\" }))\n    });\n\n  const { current: handlePressKeyToCopyInputTextToClipboard } = useRef((e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleCopyInputTextToClipboard();\n    }\n  });\n  // =======================================================\n\n    return (\n        <Card className={classes.root}>\n            <Grid container direction=\"column\">\n                <Typography variant=\"subtitle2\" className={classes.mb}>Share this link in social networks</Typography>\n                <TextField\n                    value={link}\n                    onClick={handleCopyInputTextToClipboard}\n                    onKeyDown={handlePressKeyToCopyInputTextToClipboard}\n                    fullWidth\n                    variant=\"outlined\"\n                    className={classes.copyInput}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <FileCopy />\n                        </InputAdornment>\n                      ),\n                    }}\n                />\n                <Typography variant=\"subtitle2\" className={classes.mb}>Card preview</Typography>\n                <CardLink\n                    color={color}\n                    owner={owner}\n                    repo={repo}\n                    icon={icon}\n                />\n            </Grid>\n        </Card>\n    )\n}\n\nexport default ModalContent","import { ChangeEvent, FC, useEffect, useState, useRef, useCallback } from 'react'\nimport { useSnackbar } from 'notistack'\nimport { useDebounce } from 'use-debounce';\n\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport CardList from '../../components/CardList'\nimport ColorPicker from '../../components/ColorPicker'\nimport ModalContent from '../../components/ModalContent'\nimport { getOwner, getOwnerRepo, getShortURL } from '../../API/api'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        borderRadius: theme.spacing(2),\n        padding: theme.spacing(2),\n        width: 400,\n        background: '#F3F3F3',\n    },\n    marginBottom: {\n      marginBottom: theme.spacing(2),\n    },\n    margin: {\n      margin: theme.spacing(1),\n      },\n    createLinkButton: {\n      height: 50,\n    },\n    textField: {\n        background: 'white',\n        '& .MuiInputBase-input.Mui-disabled': {\n            backgroundColor: 'rgba(0, 0, 0, 0.12)',\n        }\n    }\n}));\n\nconst CreateLinkPage: FC = () => {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    // =========Owner============\n    const [owner, setOwner] = useState<string>('')\n    const [isOwnerExists, setIsOwnerExists] = useState<boolean>(false)\n    const handleOwnerChange = useRef((e: ChangeEvent<HTMLInputElement>) => setOwner(e.target.value))\n\n    const [debouncedOwner] = useDebounce(owner, 500);\n\n    const checkIfOwnerExists = useRef(async (debouncedOwner: string) => {\n        try {\n            const { data } = await getOwner(debouncedOwner)\n            if (data.login !== debouncedOwner) {\n                throw Error(`Author ${debouncedOwner} does not exists on GitHub`)\n            }\n            setIsOwnerExists(true)\n        } catch (e) {\n            setIsOwnerExists(false)\n            enqueueSnackbar(`Author ${debouncedOwner} does not exists on GitHub`, { variant: \"warning\"})\n        }\n    })\n\n    useEffect(() => {\n        if (debouncedOwner) {\n            checkIfOwnerExists.current(debouncedOwner)\n        }\n    }, [debouncedOwner])\n    // ====================================\n\n    // =========Repository============\n    const [repo, setRepo] = useState<string>('')\n    const [isRepoExists, setIsRepoExists] = useState(false)\n    const handleRepoChange = useRef((e: ChangeEvent<HTMLInputElement>) => setRepo(e.target.value))\n\n    const [debouncedRepo] = useDebounce(repo, 1000);\n\n    const checkIfRepoExists = useRef(async (debouncedOwner: string, debouncedRepo: string) => {\n        try {\n            const { data } = await getOwnerRepo(debouncedOwner, debouncedRepo)\n            if (data.name !== debouncedRepo) {\n                throw Error(`Repository ${debouncedRepo} does not exists`)\n            }\n            setIsRepoExists(true)\n        } catch (e) {\n            setIsRepoExists(false)\n            enqueueSnackbar(`Repository ${debouncedRepo} does not exists`, { variant: \"warning\"})\n        }\n    })\n\n    useEffect(() => {\n        if (debouncedOwner && debouncedRepo) {\n            checkIfRepoExists.current(debouncedOwner, debouncedRepo)\n        }\n    }, [debouncedOwner, debouncedRepo])\n\n    // ====================================\n\n    // ==============ColorPicker======================\n    const [color, setColor] = useState<string>('#fff')\n    const handleChangeComplete = useRef((color: any) => setColor(color.hex))\n    // ======================================\n\n    // =================Icon=====================\n    const [icon, setIcon] = useState<string>('')\n    const handleOnClickIconCard = useRef((iconName: string) => setIcon(iconName))\n\n    // ======================================\n\n    // ================Modal======================\n    const [isOpenModal, setIsOpenModal] = useState(false)\n    const toggleOpenModal = useRef(() => setIsOpenModal(prev => !prev))\n    // ======================================\n\n    const [linkURL, setLinkURL] = useState<string>('')\n\n    const handleCreateLink = useCallback(async () => {\n        const baseURL = window.location.origin\n        const queryParams = `?owner=${owner}&repo=${repo}&color=${color}&icon=${icon}`\n        const encodedQueryParams = btoa(queryParams);\n        const longLinkURL = `${baseURL}/card/${encodedQueryParams}`\n        const { data: tinyURL } = await getShortURL(longLinkURL)\n        const { pathname: tinyPathname } = new URL(tinyURL)\n        const shortLinkURL = `${baseURL}${tinyPathname}`\n        setLinkURL(shortLinkURL)\n        toggleOpenModal.current()\n        },\n        [color, owner, repo, icon],\n    )\n\n    const isCreateLinkButtonDisabled = !isOwnerExists || !isRepoExists || !icon\n\n    return (\n        <Box p={4}>\n            <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid\n                    item\n                    container\n                    direction=\"column\"\n                    className={classes.root}\n                >\n                    <Grid item container justifyContent=\"center\">\n                        <Typography className={classes.marginBottom}>\n                            Create link for github repository\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} className={classes.marginBottom}>\n                        <TextField\n                            fullWidth\n                            label=\"Author\"\n                            value={owner}\n                            onChange={handleOwnerChange.current}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            className={classes.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={12} className={classes.marginBottom}>\n                        <TextField\n                            fullWidth\n                            label=\"Repository\"\n                            value={repo}\n                            onChange={handleRepoChange.current}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            disabled={!isOwnerExists || !owner}\n                            className={classes.textField}\n                        />\n                    </Grid>\n                    <ColorPicker\n                        color={color}\n                        handleChangeComplete={handleChangeComplete.current}\n                    />\n                    <CardList\n                        selectedIcon={icon}\n                        handleOnClickIconCard={handleOnClickIconCard.current}\n                    />\n                    <Grid item className={classes.marginBottom}>\n                        <Button\n                            onClick={handleCreateLink}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={isCreateLinkButtonDisabled}\n                            className={classes.createLinkButton}\n                            fullWidth\n                        >\n                            Create Link\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Modal\n                open={isOpenModal}\n                onClose={toggleOpenModal.current}\n            >\n                <ModalContent\n                    color={color}\n                    owner={owner}\n                    repo={repo}\n                    icon={icon}\n                    link={linkURL}\n                />\n            </Modal>\n        </Box>\n    )\n}\n\nexport default CreateLinkPage;","import { FC, useState, useEffect, useCallback } from 'react'\nimport { Redirect, useParams } from 'react-router-dom';\nimport { checkTinyURL } from '../../API/api'\n\ninterface Params {\n    shorthash: string,\n}\n\nconst RedirectPage: FC = () => {\n    const { shorthash } = useParams<Params>()\n    const [existsTinyURL, setExistsTinyURL] = useState<boolean>(true)\n\n    const checkIfExistsTinyURL = useCallback(async () => {\n        try {\n            await checkTinyURL(shorthash)\n        } catch (error) {\n            const errorMessage = (error as Error).message\n            const isTinyURL = !errorMessage.includes('404')\n            if (isTinyURL) {\n                window.location.assign(`https://tinyurl.com/${shorthash}`)\n                return\n            }\n            setExistsTinyURL(false)\n        }\n    }, [shorthash])\n\n    useEffect(() => {\n        checkIfExistsTinyURL()\n    }, [checkIfExistsTinyURL])\n    return (\n        <>\n            {!existsTinyURL && <Redirect to=\"/\" />}\n        </>\n    )\n}\n\nexport default RedirectPage;"],"sourceRoot":""}
{"version":3,"sources":["API/api.js","components/Contributors/Contributors.tsx","components/CardLink/CardLink.tsx","pages/CardLinkPage/CardLinkPage.tsx"],"names":["getOwner","owner","axios","get","getOwnerRepo","repo","getContributors","getShortURL","longURL","checkTinyURL","tinyHash","starRepo","token","put","headers","checkIsStarredRepo","defaults","baseURL","useStyles","makeStyles","accordion","background","boxShadow","display","margin","accordionSummary","padding","minHeight","height","Contributors","contributors","classes","Accordion","className","AccordionSummary","expandIcon","Typography","AccordionDetails","Grid","container","direction","map","contributor","index","item","memo","theme","card","width","spacing","borderRadius","desc","flexDirection","justifyContent","starButton","modalButton","position","top","right","modalInput","paddingRight","modalContent","left","transform","CardLink","color","icon","enqueueSnackbar","useSnackbar","useState","repoAuthor","setRepoAuthor","repoName","setRepoName","repoDescription","setRepoDescription","starsAmount","setStarsAmount","setContributors","getContributorList","useRef","a","data","login","slice","variant","fetchData","useCallback","name","description","stargazers_count","message","useEffect","current","SelectedIcon","icons","AiFillStar","AiOutlineStar","AiOutlineSend","isOpenModal","setIsOpenModal","isStarredRepo","setIsStarredRepo","toggleOpenModal","prev","tokenPAT","setTokenPAT","handleTokenPATChange","e","target","value","handleClickToStarRepo","status","console","log","Error","Card","style","size","IconButton","onClick","Modal","open","onClose","Box","TextField","onChange","label","fullWidth","root","marginBottom","CardLinkPage","history","useHistory","handleCreateOwnCard","push","hash","useParams","decodedQueryParams","atob","error","queryParams","URLSearchParams","shouldRedirect","to","Button"],"mappings":"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","file":"static/js/cardlink.96226e3e.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.github.com';\n\nexport function getOwner (owner) {\n    return axios.get(`users/${owner}`);\n}\n\nexport function getOwnerRepo(owner, repo) {\n    return axios.get(`repos/${owner}/${repo}`);\n}\n\nexport function getContributors(owner, repo) {\n    return axios.get(`repos/${owner}/${repo}/contributors`);\n}\n\nexport function getShortURL(longURL) {\n    return axios.get(`https://tinyurl.com/api-create.php?url=${longURL}`)\n}\n\nexport function checkTinyURL(tinyHash) {\n    return axios.get(`https://tinyurl.com/${tinyHash}`)\n}\n\nexport function starRepo(owner, repo, token) {\n  return axios.put(`user/starred/${owner}/${repo}`, {}, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/vnd.github.v3+json',\n      'Authorization': `token ${token}`\n    }\n  })\n}\n\nexport function checkIsStarredRepo(owner, repo, token) {\n  return axios.get(`user/starred/${owner}/${repo}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/vnd.github.v3+json',\n      'Authorization': `token ${token}`\n    }\n  })\n}\n\n","import React, { FC, memo } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    accordion: {\n    background: 'inherit',\n    boxShadow: 'none',\n    '&:before': {\n      display: 'none',\n    },\n    '&.Mui-expanded': {\n        margin: 0,\n      }\n  },\n  accordionSummary: {\n      display: 'inline-flex',\n      padding: 0,\n      minHeight: 0,\n      height: 20,\n      '&.Mui-expanded': {\n        minHeight: 0,\n      },\n      '& .MuiIconButton-root': {\n        padding: 0,\n      },\n  }\n}));\n\ninterface ContributorsProps {\n    contributors: string[];\n}\n\nconst Contributors: FC<ContributorsProps> = ({ contributors }) => {\n  const classes = useStyles();\n\n  return (\n    <Accordion className={classes.accordion}>\n      <AccordionSummary className={classes.accordionSummary} expandIcon={<ExpandMoreIcon />}>\n        <Typography>Contributors</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container direction=\"column\">\n          {contributors.map((contributor, index) => (\n            <Grid item key={contributor}>\n                <Typography>{`${index + 1} ${contributor}`}</Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default memo(Contributors);\n","import { FC, useState, useEffect, useCallback, useRef, ChangeEvent } from 'react'\nimport { useSnackbar } from 'notistack'\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport * as icons from 'react-icons/ai'\nimport { getOwnerRepo, getContributors, starRepo, checkIsStarredRepo } from '../../API/api'\nimport { IContributor } from '../../interfaces'\nimport Contributors from '../Contributors'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    width: 400,\n    padding: theme.spacing(4),\n    borderRadius: theme.spacing(3),\n  },\n  desc: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    },\n  starButton: {\n    padding: 0,\n    borderRadius: 0,\n  },\n  modalButton: {\n      borderRadius: 4,\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      padding: 16,\n  },\n  modalInput: {\n    '& .MuiInputBase-root': {\n        paddingRight: 42,\n    },\n  },\n  modalContent: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    width: 400,\n  },\n}));\n\ninterface CardLinkProps {\n    color: string;\n    owner: string;\n    repo: string;\n    icon: string;\n}\n\nconst CardLink: FC<CardLinkProps> = ({ color, owner, repo, icon }) => {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [repoAuthor, setRepoAuthor] = useState<string>('')\n    const [repoName, setRepoName] = useState<string>('')\n    const [repoDescription, setRepoDescription] = useState<string>('')\n    const [starsAmount, setStarsAmount] = useState<number>(0)\n\n    // ================getContributors====================\n    const [contributors, setContributors] = useState<string[]>([])\n\n    const getContributorList = useRef(async () => {\n        try {\n            const { data } = await getContributors(owner, repo)\n            const contributors = (data as IContributor[]).map(({ login }) => login).slice(0, 10)\n            setContributors(contributors)\n        } catch (e) {\n            enqueueSnackbar('Can\\'t get contributors', { variant: \"warning\"})\n        }\n    })\n    // ====================================\n\n    const fetchData = useCallback(\n        async () => {\n            try {\n                const {data} = await getOwnerRepo(owner, repo)\n                setRepoAuthor(data.owner.login)\n                setRepoName(data.name)\n                setRepoDescription(data.description)\n                setStarsAmount(data.stargazers_count)\n            } catch (e) {\n                enqueueSnackbar(`Author or repository with these names does not exist. ${(e as Error).message}`, { variant: \"error\"})\n            }\n        },\n        [owner, repo, enqueueSnackbar],\n    )\n\n    useEffect(() => {\n        fetchData()\n        getContributorList.current()\n    }, [fetchData])\n\n    const SelectedIcon = icons[icon as keyof typeof icons]\n    const { AiFillStar, AiOutlineStar, AiOutlineSend } = icons\n\n    // ================Modal======================\n    const [isOpenModal, setIsOpenModal] = useState(false)\n    const [isStarredRepo, setIsStarredRepo] = useState(false)\n    const toggleOpenModal = useRef(() => setIsOpenModal(prev => !prev))\n\n    const [tokenPAT, setTokenPAT] = useState<string>('')\n    const handleTokenPATChange = useRef((e: ChangeEvent<HTMLInputElement>) => setTokenPAT(e.target.value))\n\n    const handleClickToStarRepo = useCallback(async () => {\n        try {\n            const { status } = await checkIsStarredRepo(owner, repo, tokenPAT)\n            if (status === 204) {\n                toggleOpenModal.current()\n                setIsStarredRepo(true)\n                return\n            }\n        } catch (error) {\n            console.log((error as Error).message)\n        }\n\n        try {\n            const { status } = await starRepo(owner, repo, tokenPAT)\n            if (status !== 204) {\n                throw Error('Try again')\n            }\n            toggleOpenModal.current()\n            setStarsAmount(prev => prev + 1)\n            setIsStarredRepo(true)\n        } catch (error) {\n            enqueueSnackbar((error as Error).message, { variant: \"warning\"})\n        }\n    }, [owner, repo, tokenPAT, enqueueSnackbar]);\n    // ======================================\n\n    return (\n        <>\n        <Card className={classes.card} style={{background: color}}>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <SelectedIcon size=\"8em\" />\n                </Grid>\n                <Grid item className={classes.desc}>\n                    <Typography>Author: {repoAuthor}</Typography>\n                    <Typography>Repository: {repoName}</Typography>\n                    <Typography>Description: {repoDescription || 'no description'}</Typography>\n                    <Typography>\n                        Stars: {starsAmount}\n                        <IconButton className={classes.starButton} onClick={toggleOpenModal.current}>\n                            {isStarredRepo ? <AiFillStar /> : <AiOutlineStar />}\n                        </IconButton>\n                    </Typography>\n                    <Contributors contributors={contributors} />\n                </Grid>\n            </Grid>\n            </Card>\n            <Modal\n                open={isOpenModal}\n                onClose={toggleOpenModal.current}\n            >\n                <Card className={classes.modalContent}>\n                    <Box position=\"relative\">\n                        <TextField\n                            value={tokenPAT}\n                            onChange={handleTokenPATChange.current}\n                            variant=\"outlined\"\n                            label=\"Fill your personal auth token\"\n                            fullWidth\n                            className={classes.modalInput}\n                        />\n                        <IconButton className={classes.modalButton} onClick={handleClickToStarRepo}>\n                            <AiOutlineSend />\n                        </IconButton>\n                    </Box>\n                </Card>\n            </Modal>\n            </>\n    )\n}\n\nexport default CardLink","import { FC, useRef } from 'react'\nimport { Redirect, useParams, useHistory } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport CardLink from '../../components/CardLink'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    padding: theme.spacing(4),\n    borderRadius: theme.spacing(3),\n    },\n    card: {\n        marginBottom: theme.spacing(2),\n    }\n}));\n\ninterface Params {\n    hash: string,\n}\n\nconst CardLinkPage: FC = () => {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const handleCreateOwnCard = useRef(() => history.push('/'))\n\n    const { hash } = useParams<Params>()\n\n    let decodedQueryParams = ''\n    try {\n        decodedQueryParams = atob(hash);\n    } catch (error) {\n        console.log('error', error)\n    }\n\n    const queryParams = new URLSearchParams(decodedQueryParams);\n\n    const color = queryParams.get('color') || ''\n    const owner = queryParams.get('owner') || ''\n    const repo = queryParams.get('repo') || ''\n    const icon = queryParams.get('icon') || ''\n\n    const shouldRedirect = !color || !owner || !repo || !icon\n\n    return (\n        <>\n            {shouldRedirect && <Redirect to=\"/\" />}\n            {!shouldRedirect && <Grid container justifyContent=\"center\" className={classes.root}>\n                <Grid item className={classes.card}>\n                    <CardLink\n                    color={color}\n                    owner={owner}\n                    repo={repo}\n                    icon={icon}\n                />\n                </Grid>\n                <Grid item>\n                    <Button onClick={handleCreateOwnCard.current}>Create own card</Button>\n                </Grid>\n            </Grid>}\n        </>\n    )\n}\n\nexport default CardLinkPage;"],"sourceRoot":""}
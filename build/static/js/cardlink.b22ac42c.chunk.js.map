{"version":3,"sources":["API/api.js","components/Contributors/Contributors.tsx","components/CardLink/CardLink.tsx","pages/CardLinkPage/CardLinkPage.tsx"],"names":["getOwner","owner","axios","get","getOwnerRepo","repo","getContributors","getShortURL","longURL","checkTinyURL","tinyHash","defaults","baseURL","useStyles","makeStyles","accordion","background","boxShadow","display","margin","accordionSummary","padding","minHeight","height","Contributors","contributors","classes","Accordion","className","AccordionSummary","expandIcon","Typography","AccordionDetails","Grid","container","direction","map","contributor","index","item","memo","theme","card","width","spacing","borderRadius","desc","flexDirection","justifyContent","CardLink","color","icon","enqueueSnackbar","useSnackbar","useState","repoAuthor","setRepoAuthor","repoName","setRepoName","repoDescription","setRepoDescription","starsAmount","setStarsAmount","setContributors","getContributorList","useRef","a","data","login","slice","variant","fetchData","useCallback","name","description","stargazers_count","message","useEffect","current","SelectedIcon","icons","Card","style","size","root","position","top","left","transform","marginBottom","CardLinkPage","history","useHistory","handleCreateOwnCard","push","hash","useParams","decodedQueryParams","atob","error","console","log","queryParams","URLSearchParams","shouldRedirect","to","Button","onClick"],"mappings":"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","file":"static/js/cardlink.b22ac42c.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.github.com';\n\nexport function getOwner (owner) {\n    return axios.get(`users/${owner}`);\n}\n\nexport function getOwnerRepo(owner, repo) {\n    return axios.get(`repos/${owner}/${repo}`);\n}\n\nexport function getContributors(owner, repo) {\n    return axios.get(`repos/${owner}/${repo}/contributors`);\n}\n\nexport function getShortURL(longURL) {\n    return axios.get(`https://tinyurl.com/api-create.php?url=${longURL}`)\n}\n\nexport function checkTinyURL(tinyHash) {\n    return axios.get(`https://tinyurl.com/${tinyHash}`)\n}","import React, { FC, memo } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    accordion: {\n    background: 'inherit',\n    boxShadow: 'none',\n    '&:before': {\n      display: 'none',\n    },\n    '&.Mui-expanded': {\n        margin: 0,\n      }\n  },\n  accordionSummary: {\n      display: 'inline-flex',\n      padding: 0,\n      minHeight: 0,\n      height: 20,\n      '&.Mui-expanded': {\n        minHeight: 0,\n      },\n      '& .MuiIconButton-root': {\n        padding: 0,\n      },\n  }\n}));\n\ninterface ContributorsProps {\n    contributors: string[];\n}\n\nconst Contributors: FC<ContributorsProps> = ({ contributors }) => {\n  const classes = useStyles();\n\n  return (\n    <Accordion className={classes.accordion}>\n      <AccordionSummary className={classes.accordionSummary} expandIcon={<ExpandMoreIcon />}>\n        <Typography>Contributors</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container direction=\"column\">\n          {contributors.map((contributor, index) => (\n            <Grid item key={contributor}>\n                <Typography>{`${index + 1} ${contributor}`}</Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default memo(Contributors);\n","import { FC, useState, useEffect, useCallback, useRef } from 'react'\nimport { useSnackbar } from 'notistack'\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport * as icons from 'react-icons/ai'\nimport { getOwnerRepo, getContributors } from '../../API/api'\nimport { IContributor } from '../../interfaces'\nimport Contributors from '../Contributors'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    width: 400,\n    padding: theme.spacing(4),\n    borderRadius: theme.spacing(3),\n  },\n  desc: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n}));\n\ninterface CardLinkProps {\n    color: string;\n    owner: string;\n    repo: string;\n    icon: string;\n}\n\nconst CardLink: FC<CardLinkProps> = ({ color, owner, repo, icon }) => {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [repoAuthor, setRepoAuthor] = useState<string>('')\n    const [repoName, setRepoName] = useState<string>('')\n    const [repoDescription, setRepoDescription] = useState<string>('')\n    const [starsAmount, setStarsAmount] = useState<number | null>(null)\n\n    // ================getContributors====================\n    const [contributors, setContributors] = useState<string[]>([])\n\n    const getContributorList = useRef(async () => {\n        try {\n            const { data } = await getContributors(owner, repo)\n            const contributors = (data as IContributor[]).map(({ login }) => login).slice(0, 10)\n            setContributors(contributors)\n        } catch (e) {\n            enqueueSnackbar('Can\\'t get contributors', { variant: \"warning\"})\n        }\n    })\n    // ====================================\n\n    const fetchData = useCallback(\n        async () => {\n            try {\n                const {data} = await getOwnerRepo(owner, repo)\n                setRepoAuthor(data.owner.login)\n                setRepoName(data.name)\n                setRepoDescription(data.description)\n                setStarsAmount(data.stargazers_count)\n            } catch (e) {\n                enqueueSnackbar(`Author or repository with these names does not exist. ${(e as Error).message}`, { variant: \"error\"})\n            }\n        },\n        [owner, repo, enqueueSnackbar],\n    )\n\n    useEffect(() => {\n        fetchData()\n        getContributorList.current()\n    }, [fetchData])\n\n    const SelectedIcon = icons[icon as keyof typeof icons]\n\n    return (\n        <Card className={classes.card} style={{background: color}}>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <SelectedIcon size=\"8em\" />\n                </Grid>\n                <Grid item className={classes.desc}>\n                    <Typography>Author: {repoAuthor}</Typography>\n                    <Typography>Repository: {repoName}</Typography>\n                    <Typography>Description: {repoDescription || 'no description'}</Typography>\n                    <Typography>Stars: {starsAmount}</Typography>\n                    <Contributors contributors={contributors} />\n                </Grid>\n            </Grid>\n        </Card>\n    )\n}\n\nexport default CardLink","import { FC, useRef } from 'react'\nimport { Redirect, useParams, useHistory } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport CardLink from '../../components/CardLink'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    padding: theme.spacing(4),\n    borderRadius: theme.spacing(3),\n    },\n    card: {\n        marginBottom: theme.spacing(2),\n    }\n}));\n\ninterface Params {\n    hash: string,\n}\n\nconst CardLinkPage: FC = () => {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const handleCreateOwnCard = useRef(() => history.push('/'))\n\n    const { hash } = useParams<Params>()\n\n    let decodedQueryParams = ''\n    try {\n        decodedQueryParams = atob(hash);\n    } catch (error) {\n        console.log('error', error)\n    }\n\n    const queryParams = new URLSearchParams(decodedQueryParams);\n\n    const color = queryParams.get('color') || ''\n    const owner = queryParams.get('owner') || ''\n    const repo = queryParams.get('repo') || ''\n    const icon = queryParams.get('icon') || ''\n\n    const shouldRedirect = !color || !owner || !repo || !icon\n\n    return (\n        <>\n            {shouldRedirect && <Redirect to=\"/\" />}\n            {!shouldRedirect && <Grid container justifyContent=\"center\" className={classes.root}>\n                <Grid item className={classes.card}>\n                    <CardLink\n                    color={color}\n                    owner={owner}\n                    repo={repo}\n                    icon={icon}\n                />\n                </Grid>\n                <Grid item>\n                    <Button onClick={handleCreateOwnCard.current}>Create own card</Button>\n                </Grid>\n            </Grid>}\n        </>\n    )\n}\n\nexport default CardLinkPage;"],"sourceRoot":""}